package com.korea.todo.controller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
//데이터를 반환하는 컨트롤러로 사용
//JSON이나 XML형식의 데이터를 반환한다.
//@Controller, @ResponseBody 두개의 어노테이션의 결합이다.
//@ResponseBody는 메서드의 반환값을 HTTP ResponseBody로 직렬화해 클라이언트에게 전달한다.
@RequestMapping("test")//test주소로 요청이 들어왔을 때 현재 컨트롤러로 들어올 수 있게 해준다. 
public class TestController {
	
	@GetMapping("/testGetMapping")//GET으로 요청이 들어왔을 때 요청을 받아서 아래 메서드를 실행해준다.
	public String testController() {
		return "Hello world";
	}
	
	//localhost:10000/users/1
	@GetMapping("/users/{id}")
	//배열을 통해 여러개의 요청 URI를 받을 수 있다.
	public String getUserById(@PathVariable(name="id", required=false) String userId) {
		return "User ID : " + userId;
	}
	
	
	@GetMapping("/users/{userId}/orders/{orderId}")
	public String getOrderByUserAndOrderId(@PathVariable("userId") Long id, 
										   @PathVariable("orderId") Long orderId) {
		return "User ID : " + id + ", Order ID : " + orderId;
	}
	
	//정규식을 써서 변수 형식을 제한할 수 있다.
//	@GetMapping("/users/{userId:[0-9]{3}}")
//	public String getOrderByUser(@PathVariable("userId") Long id) {
//		return "User ID : " + id;
//	}
	
	
	@GetMapping("/users")
	public String getUserById(@RequestParam("id") Long userId) {
		return "User ID : " + userId;
	}
	

}










